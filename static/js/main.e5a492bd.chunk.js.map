{"version":3,"sources":["components/TableColumns.js","components/HomeTable.js","App.js","index.js"],"names":["COLUMNS","Header","accessor","Footer","Cell","value","format","Date","sticky","HomeTable","useState","employeeData","setEmployeeData","loading","setLoading","useEffect","getEmployee","a","fetch","response","json","data","columns","useTable","useSortBy","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","className","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","title","undefined","render","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","App","rootElement","document","getElementById","ReactDOM"],"mappings":"8QAEaA,EAAU,CAOrB,CACEC,OAAQ,OACRC,SAAU,YAGZ,CACED,OAAQ,SAERC,SAAU,UAGZ,CACED,OAAQ,OAERC,SAAU,QAGZ,CACED,OAAQ,QACRE,OAAQ,QACRD,SAAU,UAGZ,CACED,OAAQ,aACRE,OAAQ,aACRD,SAAU,yBACVE,KAAM,YAAgB,IAAbC,EAAY,EAAZA,MACP,OAAOC,YAAO,IAAIC,KAAKF,GAAQ,eAEjCG,OAAQ,QAEV,CACEP,OAAQ,cACRE,OAAQ,cACRD,SAAU,0BACVE,KAAM,YAAgB,IAAbC,EAAY,EAAZA,MACP,OAAOC,YAAO,IAAIC,KAAKF,GAAQ,eAEjCG,OAAQ,S,OC5CCC,EAAY,WACvB,IAGA,EAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAEAC,qBAAU,WACR,IAAMC,EAAW,uCAAG,8BAAAC,EAAA,sEACKC,MAPzB,uEAMoB,cACZC,EADY,gBAESA,EAASC,OAFlB,OAEZT,EAFY,OAGlBC,EAAgBD,EAAaQ,SAASE,MACtCP,GAAW,GAJO,2CAAH,qDAQbD,GACFG,MAED,IAGH,IAAMM,EAAUtB,EAEVqB,EAAOV,EAEb,EAOIY,mBACF,CACED,QAASA,EACTD,KAAMA,GAERG,aAXAC,EADF,EACEA,cACAC,EAFF,EAEEA,kBACAC,EAHF,EAGEA,aAEAC,EALF,EAKEA,KACAC,EANF,EAMEA,WASF,OACE,mCACE,8BACGhB,EACC,mCACE,iCACE,6BACE,qBAAKiB,UAAU,uCAAf,SACE,qBAAKA,UAAU,mBAAf,SACE,kCAOV,mCACE,qBAAKA,UAAU,WAAf,SACE,kDAAWL,KAAX,cACE,gCACGE,EAAaI,KAAI,SAACC,GAAD,OAChB,8CAAQA,EAAYC,uBAApB,aACGD,EAAYE,QAAQH,KAAI,SAACI,GAAD,OACvB,+CACMA,EAAOC,eACTD,EAAOE,qBAAqB,CAAEC,WAAOC,MAFzC,cAKGJ,EAAOK,OAAO,UACf,+BACGL,EAAOM,SACJN,EAAOO,aACL,UACA,UACF,oBAOhB,iDAAWhB,KAAX,aACGE,EAAKG,KAAI,SAACY,GAET,OADAd,EAAWc,GAET,8CAAQA,EAAIC,eAAZ,aACGD,EAAIE,MAAMd,KAAI,SAACe,GACd,OACE,8CAAQA,EAAKC,gBAAb,aACGD,EAAKN,OAAO,oC,MC3F5B,SAASQ,IACtB,OACE,sBAAKlB,UAAU,MAAf,UACE,8EACA,cAAC,EAAD,OCFN,IAAMmB,EAAcC,SAASC,eAAe,QAC5CC,IAASZ,OACP,cAAC,aAAD,UACE,cAACQ,EAAD,MAEFC,K","file":"static/js/main.e5a492bd.chunk.js","sourcesContent":["import { format } from \"date-fns\";\r\n\r\nexport const COLUMNS = [\r\n  // {\r\n  //   Header: \"Id\",\r\n \r\n  //   accessor: \"id\",\r\n  \r\n  // },\r\n  {\r\n    Header: \"Name\",\r\n    accessor: \"emp_name\",\r\n    \r\n  },\r\n  {\r\n    Header: \"Mobile\",\r\n    \r\n    accessor: \"mobile\",\r\n    \r\n  },\r\n  {\r\n    Header: \"City\",\r\n    \r\n    accessor: \"city\",\r\n    \r\n  },\r\n  {\r\n    Header: \"State\",\r\n    Footer: \"State\",\r\n    accessor: \"region\",\r\n    \r\n  },\r\n  {\r\n    Header: \"First Dose\",\r\n    Footer: \"First Dose\",\r\n    accessor: \"first_vaccination_date\",\r\n    Cell: ({ value }) => {\r\n      return format(new Date(value), \"d MMM yyyy\");\r\n    },\r\n    sticky: \"left\"\r\n  },\r\n  {\r\n    Header: \"Second Dose\",\r\n    Footer: \"Second Dose\",\r\n    accessor: \"second_vaccination_date\",\r\n    Cell: ({ value }) => {\r\n      return format(new Date(value), \"d MMM yyyy\");\r\n    },\r\n    sticky: \"left\"\r\n  }\r\n];\r\n","import React, { useMemo, useEffect, useState } from \"react\";\r\nimport { useTable, useSortBy } from \"react-table\";\r\nimport { COLUMNS } from \"./TableColumns\";\r\n\r\nexport const HomeTable = () => {\r\n  const url =\r\n    \"https://be.platform.simplifii.com/api/v1/custom/vaccinatedEmployees\";\r\n\r\n  const [employeeData, setEmployeeData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const getEmployee = async () => {\r\n      const response = await fetch(url);\r\n      const employeeData = await response.json();\r\n      setEmployeeData(employeeData.response.data);\r\n      setLoading(false);\r\n      //console.log(employeeData.response.data);\r\n    };\r\n\r\n    if (loading) {\r\n      getEmployee();\r\n    }\r\n  }, []);\r\n\r\n  // const columns = useMemo(() => COLUMNS, []);\r\n  const columns = COLUMNS;\r\n  //const data = useMemo(() => employeeData, []);\r\n  const data = employeeData;\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n\r\n    rows,\r\n    prepareRow\r\n  } = useTable(\r\n    {\r\n      columns: columns,\r\n      data: data\r\n    },\r\n    useSortBy\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        {loading ? (\r\n          <>\r\n            <center>\r\n              <h2>\r\n                <div className=\"loadingio-spinner-rolling-qv5czh9syc\">\r\n                  <div className=\"ldio-4vw15fl891q\">\r\n                    <div></div>\r\n                  </div>\r\n                </div>\r\n              </h2>\r\n            </center>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className=\"theTable\">\r\n              <table {...getTableProps()}>\r\n                <thead>\r\n                  {headerGroups.map((headerGroup) => (\r\n                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                      {headerGroup.headers.map((column) => (\r\n                        <th\r\n                          {...column.getHeaderProps(\r\n                            column.getSortByToggleProps({ title: undefined })\r\n                          )}\r\n                        >\r\n                          {column.render(\"Header\")}\r\n                          <span>\r\n                            {column.isSorted\r\n                              ? column.isSortedDesc\r\n                                ? \" ▼\"\r\n                                : \" ▲\"\r\n                              : \"\"}\r\n                          </span>\r\n                        </th>\r\n                      ))}\r\n                    </tr>\r\n                  ))}\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                  {rows.map((row) => {\r\n                    prepareRow(row);\r\n                    return (\r\n                      <tr {...row.getRowProps()}>\r\n                        {row.cells.map((cell) => {\r\n                          return (\r\n                            <td {...cell.getCellProps()}>\r\n                              {cell.render(\"Cell\")}\r\n                            </td>\r\n                          );\r\n                        })}\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                  {/* <tr>\r\n                    <td></td>\r\n                  </tr> */}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { HomeTable } from \"./components/HomeTable\";\nimport \"./styles.css\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <h1>Vaccinated Employees as per self declaration</h1>\n      <HomeTable />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}